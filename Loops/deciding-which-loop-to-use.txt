
THE WHILE LOOP: The while loop is a conditional loop, which means it repeats as long as a particular condition exists.
It is alos a pretest loop, so it is ideal in situations where you do not want the loop to iterate if the condition is
false from the beginning. For example, validating input that has been read and reading lists of dat terminated by a 
sentinel value are good applications of the while loop.

THE DO-WHILE LOOP: The do-while loop is also a conditional loop. Unlike the while loop, however, do-while is a posttest loop.
It is ideal in situations where you always want the loop to iterate at least once. The do-while loop is a good choice for
repeating a menu.

THE FOR LOOP: The for loop is a pretest loop that has built-in expressions for (initalizing, testing, and updating). These
expressions make it very convenient to use a counter variable to control the number of iterations that the loop performs.
The initialization expression can initialize the counter variable to a starting value, the test expression can test the 
counter variable to determine whether it holds the maximum value, and the update expression can increment the counter 
variable. The for loop is ideal in situations where the exact number of iterations is known.

